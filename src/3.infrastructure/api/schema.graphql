type Query {
  restaurants: [Restaurant!]!
}

type Mutation {
  signUp(input: SignUpInput!): SignUpOutput!
  login(email: String!, password: String!): AuthPayload
}

# TODO use scalars for email and password
input SignUpInput {
  email: String!
  password: String!
  name: String
  role: Role
}

type SignUpOutput {
  success: Boolean!
}

type AuthPayload {
  token: String!
}

# type User {
#   id: ID!;
#   name: String;
#   email: String!
# }

type Restaurant {
  id: ID!
}

enum Role {
  USER
  OWNER
  # ADMIN # We don't need this yet
}
